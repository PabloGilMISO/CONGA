/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.43
 * Generated at: 2021-05-25 07:00:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Login page</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"bootstrap\\css\\bootstrap.min.css\" />\r\n");
      out.write("<link href='https://fonts.googleapis.com/css?family=Atma'\r\n");
      out.write("\trel='stylesheet'>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\" />\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"js/login.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row justify-content-md-center loginbox\">\r\n");
      out.write("\t\t\t<div class=\"col\">\r\n");
      out.write("\t\t\t\t<div class=\"text-center shadow-none bg-light rounded\">\r\n");
      out.write("\t\t\t\t\t<h1 class=\"display-4 congaBig\">CONGA</h1>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!--  <div class=\"text-center\"><h2 class=\"display-4\">Login</h2></div>-->\r\n");
      out.write("\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col\">\r\n");
      out.write("\t\t\t\t\t\t");

							if (getServletContext().getAttribute("msg") != null) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"alert alert-danger\">");
      out.print(getServletContext().getAttribute("msg"));
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t\t");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<form class=\"login-form\" method=\"post\" action=\"login\">\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"lg_username\" class=\"sr-only\">username</label> <input\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" id=\"lg_username\"\r\n");
      out.write("\t\t\t\t\t\t\t\tname=\"lg_username\" placeholder=\"username\"\r\n");
      out.write("\t\t\t\t\t\t\t\tonblur=\"validateUserName()\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"error_username\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"lg_password\" class=\"sr-only\">password</label> <input\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"password\" class=\"form-control\" id=\"lg_password\"\r\n");
      out.write("\t\t\t\t\t\t\t\tname=\"lg_password\" placeholder=\"password\"\r\n");
      out.write("\t\t\t\t\t\t\t\tonblur=\"validateLgPassword()\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"error_password\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<!--\r\n");
      out.write("                    <div class=\"form-group login-group-checkbox\">\r\n");
      out.write("                        <input type=\"checkbox\" id=\"lg_remember\" name=\"lg_remember\">\r\n");
      out.write("                        <label for=\"lg_remember\">recordarme</label>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    -->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<button type=\"submit\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"row-lg btn btn-secondary btn-lg btn-block\">Sign in</button>\r\n");
      out.write("\t\t\t\t\t<div class=\"etc-login-form\">\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\tNew to CONGA? <a href=\"\"> Create an account.</a>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\tYou can also <a href=\"editor.jsp\">try</a> CONGA without account.\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- \t\t<div class=\"row\" style=\"margin-top: 260px; margin-left: 905px\"> -->\r\n");
      out.write("\t\t<!-- \t\t\t<div class = \"col\"> -->\r\n");
      out.write("\t\t<!-- \t\t\t</div> -->\r\n");
      out.write("\t\t<!-- \t\t\t<div class = \"col\"> -->\r\n");
      out.write("\t\t<!-- \t\t\t<iframe allow=\"microphone;\" width=\"350\" height=\"430\" -->\r\n");
      out.write("\t\t<!-- \t\t\t\tsrc=\"https://console.dialogflow.com/api-client/demo/embedded/0439012a-5ee3-4384-96bc-e5d389c8ee55\"> -->\r\n");
      out.write("\t\t<!-- \t\t\t</iframe> -->\r\n");
      out.write("\t\t<!-- \t\t\t</div> -->\r\n");
      out.write("\t\t<!-- \t\t</div> -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- \t\t<script -->\r\n");
      out.write("\t\t<!-- \t\t\tsrc=\"https://www.gstatic.com/dialogflow-console/fast/messenger/bootstrap.js?v=1\"></script> -->\r\n");
      out.write("\t\t<!-- \t\t<df-messenger chat-title=\"Test\" -->\r\n");
      out.write("\t\t<!-- \t\t\tagent-id=\"0439012a-5ee3-4384-96bc-e5d389c8ee55\" language-code=\"en\"></df-messenger> -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
