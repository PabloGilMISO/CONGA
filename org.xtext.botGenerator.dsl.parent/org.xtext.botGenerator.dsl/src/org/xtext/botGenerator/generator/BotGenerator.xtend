/*
 * generated by Xtext 2.19.0
 */
package org.xtext.botGenerator.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import generator.Entity
import generator.RegexInput
import generator.SimpleInput
import generator.Intent

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class BotGenerator extends AbstractGenerator {
	public static final int REGEX = 0;
	public static final int SIMPLE = 1;
	public static final int COMPOSITE = 2;
	public static final int TRAINING = 3;
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {

		var dialogflow = new DialogflowGenerator()
		dialogflow.doGenerate(resource, fsa, context)
		var rasa = new RasaGenerator()
		rasa.doGenerate(resource, fsa, context)

	}

	def static entityType(Entity entity) {
		var input = entity.inputs.get(0)
		if (input.inputs.get(0) instanceof RegexInput) {
			return REGEX
		} else if (input.inputs.get(0) instanceof SimpleInput) {
			return SIMPLE
		} else {
			return COMPOSITE
		}
	}
	
	def static intentType(Intent intent) {
		var input = intent.inputs.get(0)
		if (input.inputs.get(0) instanceof RegexInput) {
			return REGEX
		} else{
			return TRAINING
		} 
	}
	

}
